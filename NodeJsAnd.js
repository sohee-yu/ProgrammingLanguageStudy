//Node.js and React.js and Vue.js + Angular.js

/*
1. NodeJS
NodeJS는 구글 크롬의 자바스크립트 엔진(V8 Engine)에 기반해 만들어진 서버 사이드 플랫폼
자바스크립트 런타임(특정 언어로 만든 프로그램을 실행할 수 있는 환경)
Node.js는 확장성 있는 네트워크 애플리케이션(특히 서버사이드) 개발에 사용되는 소프트웨어 플랫폼
Node.js 패키지 생태계인 npm은 방대한 오픈 소스 라이브러리 생태계

노드는 자바스크립트 애플리케이션이 서버로서 기능하기 위한 도구를 제공하여 서버로의 역할도 쉽게 할 수 있다. 
 

기존에 Java-Spring-tomcat으로 프로그램을 개발해 본 사람이 Node.js를 배우면, 단 2개의 페이지로 서버까지 구현이 가능한 것이 놀라울 것이다. 

Node.js  특징 
Node.js를 사용하면 웹 브라우저가 아닌 곳에서 자바스크립트로 개발 할 수 있음. 프로그램, 프레임워크가 아닌 플랫폼
작성 언어로 자바스크립트를 활용하며 Non-blocking I/O와 단일 스레드 이벤트 루프를 통한 높은 처리 성능을 가짐
이벤트 기반으로 동작하며, 이벤트 리스너에 등록해둔 콜백 함수를 호출
이벤트 루프 : 이벤트 발생 시 호출할 콜백 함수들을 관리하고, 호출된 콜백 함수의 실행 순서를 결정하는 역할을 담당, 노드가 종료 될 때 까지 이벤트 처리를 위한 작업을 반복하므로 루프로 불림
논블로킹 I/O : 이전 작업이 완료 될 때 까지 멈추지 않고 다음 작업을 수행
노드는 싱글 스레드로 한번에 한가지 일을 처리하는 형태
노드는 싱글 스레드, 논 블로킹 모델(하나의 프로세스로 동시에 작업이 일어나듯이 처리)
내장 HTTP 서버 라이브러리를 포함하고 있어 웹 서버에서 아파치 등의 별도의 소프트웨어 없이 동작이 가능

단점 : 싱글 스레드라서 CPU 코어를 하나만 사용(CPU 작업이 많은 서버로는 부적합)

웹 프레임워크는 동적인 웹페이지나, 웹 애플리케이션, 웹 서비스 개발 보조용으로 만들어지는 애플리케이션 프레임 워크의 일종이다. 웹 페이지 개발을 쉽고 편리하게 할 수 있도록 데이터베이슨 연동, 템플릿 형태의 표준 등의 기능을 가지고 있는 것이다. 

자바 기반의 프레임워크는 Spring이 있고, 노드 기반의 대표적인 웹 프레임워크는 Angular, React, Vue, Meteor 등이 있다.


*/

//이후 npm and yarn

//+ MongDB

// 오늘 회사에서 신입직원들과 이야기 중에 나왔던 내용 포함하여 이미 사용하고 있지만, 막상 설명해주려니 애매하게 알고 있거나 확신이 서지 않았던 내용들로 이 기회에 정리해 두기로 한다.
// 사실 뭔지 아는것보다 설치하거나 바로 사용하는것이 더 간단할지도...
// 위와 관련된 자세한 내용들은 이후 블로그에 순서대로 정리 예정
